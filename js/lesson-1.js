// Завдання 1:

// Запропонуйте користувачу ввести число за допомогою prompt().
// Збережіть введене значення у змінну number.
// Перевірте, чи дорівнює змінна number числу 10:
//    Якщо так – виведіть повідомлення 'Вірно' у alert().
//    Якщо ні – виведіть 'Невірно'.

// Підказка: prompt завжди повертає рядок (String), тому перед перевіркою
// перетворіть значення на число за допомогою Number().

// Запропонуйте користувачу ввести число за допомогою prompt().
// let userInput = prompt('Будь ласка, введіть число:');

// // Збережіть введене значення у змінну number.
// // Перетворіть значення на число за допомогою Number().
// let number = Number(userInput);

// // Перевірте, чи дорівнює змінна number числу 10:
// if (number === 10) {
//   // Якщо так – виведіть повідомлення 'Вірно' у alert().
//   alert('Вірно');
// } else {
//   // Якщо ні – виведіть 'Невірно'.
//   alert('Невірно');
// }
//////////////////////////////////////////////////////////////
// Завдання 2:

// У змінній min лежить випадкове число від 0 до 59.
// Визначте, в яку чверть години потрапляє
// це число (у першу, другу, третю чи четверту).
// Виведіть в alert відповідне повідомлення, наприклад:
// "10 входить в першу чверть"

// const min = Math.floor(Math.random() * (59 - 0) + 0);
// У змінній min лежить випадкове число від 0 до 59.
// Визначте, в яку чверть години потрапляє це число
// і виведіть відповідне повідомлення.

// const min = Math.floor(Math.random() * 60); // 0 до 59 включно

// let message;

// if (min >= 0 && min <= 14) {
//   message = `${min} входить в першу чверть`;
// } else if (min >= 15 && min <= 29) {
//   message = `${min} входить в другу чверть`;
// } else if (min >= 30 && min <= 44) {
//   message = `${min} входить в третю чверть`;
// } else if (min >= 45 && min <= 59) {
//   message = `${min} входить в четверту чверть`;
// } else {
//   message = 'Неправильне значення хвилин';
// }

// alert(message);
//////////////////////////////////////////////////////////
// Завдання 3:

// Змінна num може набувати 4 значення: '1', '2', '3' або '4'
// (запитуй це значення у користувача через prompt).
// Якщо вона має значення '1', то у змінну result запишіть 'зима',
// якщо має значення '2' - 'весна' і так далі.
// Розв'яжіть завдання через switch-case.
// Не забудьте про дефолтне значення, на випадок, якщо користувач
// введе в prompt щось інше. В такому випадку result має набувати значення:
// "Вибачте, але ви маєте ввести значення від 1 до 4 включно".
// Значення змінної result виведіть в консоль.
// Запитуємо значення у користувача через prompt
// let num = prompt('Будь ласка, введіть число від 1 до 4:');

// let result; // Оголошуємо змінну result

// // Використовуємо switch-case для перевірки значення num
// switch (num) {
//   case '1':
//     result = 'зима';
//     break; // Важливо використовувати break, щоб вийти зі switch після знайденого випадку
//   case '2':
//     result = 'весна';
//     break;
//   case '3':
//     result = 'літо';
//     break;
//   case '4':
//     result = 'осінь';
//     break;
//   default: // Дефолтне значення, якщо num не відповідає жодному з випадків
//     result = 'Вибачте, але ви маєте ввести значення від 1 до 4 включно';
// }

///////////////////////////////////////////////////////////////////////////////
// Запитуємо користувача про число
// let num = prompt('Введіть число від 1 до 4:');

// // Оголошуємо змінну result
// let result;

// // Виконуємо перевірку значення
// switch (num) {
//   case '1':
//     result = 'зима';
//     break;
//   case '2':
//     result = 'весна';
//     break;
//   case '3':
//     result = 'літо';
//     break;
//   case '4':
//     result = 'осінь';
//     break;
//   default:
//     result = 'Вибачте, але ви маєте ввести значення від 1 до 4 включно';
// }

// // Виводимо результат у консоль
// console.log(result);
// // Виводимо значення змінної result в консоль
// console.log(result);
//////////////////////////////////////////////////////////////////////
// Завдання 4:

// Отримуйте від користувача число (кількість хвилин) через prompt
// і виводьте у консоль рядок у форматі годин та хвилин.
// Приклад: користувач вводить в prompt '70' -> в консолі відобразиться '01:10'.
// Корисне посилання для відображення годин та хвилин у потрібному форматі ('01' замість '1'):
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart#examples
//
// Отримуємо від користувача число (кількість хвилин) через prompt
// let totalMinutesInput = prompt('Будь ласка, введіть кількість хвилин:');

// // Перетворюємо введене значення на число.
// // Якщо введення не є числом, Number() поверне NaN.
// let totalMinutes = Number(totalMinutesInput);

// let hours;
// let minutes;
// let formattedHours;
// let formattedMinutes;

// // Перевіряємо, чи введене значення є дійсним числом і не є від'ємним
// if (isNaN(totalMinutes) || totalMinutes < 0) {
//   console.log('Будь ласка, введіть дійсне додатне число.');
// } else {
//   // Обчислюємо години та хвилини
//   hours = Math.floor(totalMinutes / 60); // Math.floor() округлює число до найближчого меншого цілого
//   minutes = totalMinutes % 60; // Оператор % (остача від ділення) дає нам хвилини, що залишилися

//   // Форматуємо години та хвилини, додаючи нуль попереду, якщо число менше 10
//   // Використовуємо padStart для додавання нулів попереду
//   formattedHours = String(hours).padStart(2, '0');
//   formattedMinutes = String(minutes).padStart(2, '0');

//   // Виводимо результат у консоль
//   console.log(`${formattedHours}:${formattedMinutes}`);
// }
////////////////////////////////////////////////////////////////////////////////
// Завдання 5:

// Напишіть код, який запитуватиме у користувача
// логін за допомогою prompt і виводить результат в консоль браузера

// Після цього додайте перевірку введеного користувачем значення:
// Якщо відвідувач вводить "Адмін",
// то prompt запитує пароль (не забудьте зберігти його у змінну для подальшої перевірки).
// Якщо нічого не ввели або натиснули Cancel,
// Вивести в alert строку "Скасовано"
// В іншому випадку вивести в alert рядок "Я вас не знаю"

// Пароль перевіряти так:
// Якщо введено пароль "Я головний",
// то вивести в alert рядок "Добрий день!",
// в іншому випадку вивести в alert рядок "Невірний пароль!"
//
// Запитуємо у користувача логін
// let username = prompt('Будь ласка, введіть ваш логін:');

// Виводимо логін у консоль (для відладки або демонстрації)
// console.log('Введений логін:', username);

// // Перевіряємо введене значення
// if (username === 'Адмін') {
//   // Якщо логін "Адмін", запитуємо пароль
//   let password = prompt('Будь ласка, введіть пароль:');

//   // Перевіряємо пароль
//   if (password === 'Я головний') {
//     alert('Добрий день!');
//   } else if (password === null || password === '') {
//     // Якщо натиснуто Cancel (password === null) або введено порожній рядок
//     alert('Скасовано');
//   } else {
//     // Якщо пароль невірний
//     alert('Невірний пароль!');
//   }
// } else if (username === null || username === '') {
//   // Якщо нічого не ввели для логіну або натиснули Cancel
//   alert('Скасовано');
// } else {
//   // Якщо логін не "Адмін" і не скасовано/порожньо
//   alert('Я вас не знаю');
// }
////////////////////////////////////////////////////////////////////////////////
// Завдання 6:

// Використайте цикл while, щоб вивести в console всі числа від 0 до 20 включно.
//
// let i = 0; // Ініціалізуємо змінну-лічильник

// while (i <= 20) {
//   // Умова циклу: виконувати, доки i менше або дорівнює 20
//   console.log(i); // Виводимо поточне значення i в консоль
//   i++; // Збільшуємо i на 1 після кожної ітерації
// }
////////////////////////////////////////////////////////////////////////////////
// Завдання 7:

// Напишіть функцію getNumbers(min, max), що приймає 2 параметри -
// мінімальне і максимальне число відповідно.
// Напишіть цикл всередині функції, який виводить у консоль
// всі числа від max до min за спаданням.
// Окрім цього, підрахуйте суму всіх парних чисел в цьому циклі
// і поверніть її з функції.
//
/**
 * Функція getNumbers(min, max) виводить у консоль числа від max до min за спаданням
 * і обчислює суму всіх парних чисел у цьому діапазоні.
 *
//  * @param {number} min - Мінімальне число діапазону.
//  * @param {number} max - Максимальне число діапазону.
//  * @returns {number} Сума всіх парних чисел у діапазоні від max до min.
//  */
// function getNumbers(min, max) {
//   let evenSum = 0; // Змінна для зберігання суми парних чисел

//   // Перевіряємо, чи min менше або дорівнює max.
//   // Якщо ні, можливо, варто поміняти їх місцями або вивести повідомлення про помилку.
//   // Для простоти завдання припускаємо, що min <= max, але додамо базову перевірку.
//   if (min > max) {
//     console.error(
//       'Помилка: Мінімальне число не може бути більшим за максимальне.'
//     );
//     // Можна також поміняти місцями: [min, max] = [max, min];
//     return 0; // Або викинути виняток, залежить від вимог
//   }

//   // Цикл від max до min за спаданням
//   for (let i = max; i >= min; i--) {
//     console.log(i); // Виводимо поточне число в консоль

//     // Перевіряємо, чи є число парним
//     if (i % 2 === 0) {
//       evenSum += i; // Якщо парне, додаємо його до evenSum
//     }
//   }

//   return evenSum; // Повертаємо суму парних чисел
// }
// console.log('\n--- Виклик: getNumbers(0, 10) ---');
// let sum2 = getNumbers(0, 10);
////////////////////////////////////////////////////////////
// Завдання 8:

// Напишіть функцію min(a, b), яка приймає 2 числа і повертає меньше з них.
// Потрібно додати перевірку, що функція отримує саме числа, в іншому випадку
// повертати з функції рядок - 'Not a number!'.
//
/**
 * Функція min(a, b) приймає два аргументи і повертає менше з них.
 * Якщо хоча б один з аргументів не є числом, повертає рядок 'Not a number!'.
 *
//  * @param {*} a - Перший аргумент.
//  * @param {*} b - Другий аргумент.
//  * @returns {number|string} Менше з двох чисел або рядок 'Not a number!'
//  */
// function min(a, b) {
//   // Перевірка, чи обидва аргументи є числами
//   // Number.isFinite() є надійнішою перевіркою, ніж isNaN() для чисел,
//   // оскільки вона також виключає Infinity, -Infinity та NaN.
//   if (
//     typeof a !== 'number' ||
//     typeof b !== 'number' ||
//     !Number.isFinite(a) ||
//     !Number.isFinite(b)
//   ) {
//     return 'Not a number!';
//   }

//   // Порівнюємо числа і повертаємо менше
//   if (a < b) {
//     return a;
//   } else {
//     return b;
//   }

//   // Альтернативний, більш короткий спосіб порівняння:
//   // return (a < b) ? a : b;

//   // Або найпростіший, використовуючи вбудований метод:
//   // return Math.min(a, b);
// }
//////////////////////////////////////////////////////////
//Завдання 9:

// Напишіть функцію isAdult(age), яка  приймає число - вік користувача і повертає true,
// якщо параметр age більше чи дорівнює 18.
// В іншому випадку вона запитує підтвердження через confirm
// і повертає його результат (true/false).
//
// /**
//  * Функція isAdult(age) перевіряє вік користувача.
//  * Якщо вік >= 18, повертає true.
//  * В іншому випадку, запитує підтвердження через confirm і повертає його результат.
//  *
//  * @param {number} age - Вік користувача.
//  * @returns {boolean} True, якщо вік >= 18 або користувач підтвердив. False, якщо вік < 18 і користувач не підтвердив.
//  */
// function isAdult(age) {
//   // Перевірка, чи вік є дійсним числом
//   if (typeof age !== 'number' || !Number.isFinite(age) || age < 0) {
//     console.error('Помилка: Вік повинен бути додатним числом.');
//     return false; // Повертаємо false, якщо вік не є дійсним числом
//   }

//   // Основна логіка перевірки віку
//   if (age >= 18) {
//     return true; // Якщо вік 18 або більше, повертаємо true
//   } else {
//     // Якщо вік менше 18, запитуємо підтвердження
//     let confirmation = confirm('Вам менше 18 років. Чи хочете продовжити?');
//     return confirmation; // Повертаємо результат confirm (true, якщо натиснуто OK, false, якщо Cancel)
//   }
// }
// console.log('isAdult(16):', isAdult(16));
///////////////////////////////////////////////////////////////////////////
//Завдання 10:

// Напишіть функцію fizzBuzz(num), яка приймає число і перевіряє кожне число від 1 до num:
// Якщо число ділитися  без остачі на 3 - виводить в консоль 'fizz',
// якщо ділиться  без остачі на 5 - виводить в консоль 'buzz',
// якщо ділиться  без остачі і на 3, і на 5 - виводить в консоль 'fizzbuzz'
//
//Функція fizzBuzz(num): Класична задача програмування
//Ось JavaScript функція fizzBuzz(num), яка реалізує класичну задачу FizzBuzz. Вона перевіряє числа від 1 до заданого num і виводить різні повідомлення залежно від їхньої подільності.

//JavaScript

/**
 * Функція fizzBuzz(num) перевіряє кожне число від 1 до num (включно).
 * - Якщо число ділиться на 3 і на 5 без остачі, виводить 'fizzbuzz'.
 * - Якщо число ділиться на 3 без остачі, виводить 'fizz'.
 * - Якщо число ділиться на 5 без остачі, виводить 'buzz'.
 * - В іншому випадку виводить саме число.
 *
//  * @param {number} num - Максимальне число для перевірки (верхня межа діапазону).
//  */
// function fizzBuzz(num) {
//   // Перевірка, чи є num дійсним додатним числом
//   if (
//     typeof num !== 'number' ||
//     !Number.isFinite(num) ||
//     num < 1 ||
//     !Number.isInteger(num)
//   ) {
//     console.error(
//       "Помилка: Параметр 'num' повинен бути цілим додатним числом (більше або дорівнює 1)."
//     );
//     return; // Виходимо з функції, якщо num недійсний
//   }

//   // Цикл від 1 до num (включно)
//   for (let i = 1; i <= num; i++) {
//     // Найважливіша частина: спочатку перевіряємо умову "і на 3, і на 5"
//     if (i % 3 === 0 && i % 5 === 0) {
//       console.log('fizzbuzz');
//     }
//     // Потім перевіряємо умову "на 3"
//     else if (i % 3 === 0) {
//       console.log('fizz');
//     }
//     // Потім перевіряємо умову "на 5"
//     else if (i % 5 === 0) {
//       console.log('buzz');
//     }
//     // Якщо жодна з вищезазначених умов не спрацювала
//     else {
//       console.log(i); // Виводимо саме число
//     }
//   }
// }
// console.log('\n--- fizzBuzz(5) ---');
// fizzBuzz(5);
